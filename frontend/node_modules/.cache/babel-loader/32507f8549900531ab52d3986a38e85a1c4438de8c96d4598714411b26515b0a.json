{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uppal\\\\OneDrive\\\\Desktop\\\\financial assistant\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { API_BASE_URL } from \"../config\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [categoryTotals, setCategoryTotals] = useState([]);\n  const [monthlyData, setMonthlyData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          navigate(\"/login\");\n          return;\n        }\n        const response = await axios.get(`${API_BASE_URL}/finance/expenses`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Sort expenses by date (newest first)\n        const sortedExpenses = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setExpenses(sortedExpenses);\n\n        // Calculate total expenses\n        const total = sortedExpenses.reduce((sum, expense) => sum + expense.amount, 0);\n        setTotalExpenses(total);\n\n        // Compute category totals\n        const categoryMap = {};\n        sortedExpenses.forEach(expense => {\n          categoryMap[expense.category] = (categoryMap[expense.category] || 0) + expense.amount;\n        });\n        setCategoryTotals(Object.entries(categoryMap).map(([name, value]) => ({\n          name,\n          value: parseFloat(value.toFixed(2))\n        })));\n\n        // Compute monthly totals\n        const monthlyMap = {};\n        sortedExpenses.forEach(expense => {\n          const month = new Date(expense.date).toLocaleString(\"en-US\", {\n            month: \"long\"\n          });\n          monthlyMap[month] = (monthlyMap[month] || 0) + expense.amount;\n        });\n        const monthOrder = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        setMonthlyData(Object.entries(monthlyMap).map(([month, amount]) => ({\n          month,\n          amount: parseFloat(amount.toFixed(2))\n        })).sort((a, b) => monthOrder.indexOf(a.month) - monthOrder.indexOf(b.month)));\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExpenses();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Expenses: \\u20B9\", totalExpenses.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expenses by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: categoryTotals,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: monthlyData,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"amount\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/7yi/GzVfXW5PiRp9rgkuNgmH3s=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","API_BASE_URL","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","expenses","setExpenses","loading","setLoading","totalExpenses","setTotalExpenses","categoryTotals","setCategoryTotals","monthlyData","setMonthlyData","navigate","fetchExpenses","token","localStorage","getItem","response","get","headers","Authorization","sortedExpenses","data","sort","a","b","Date","date","total","reduce","sum","expense","amount","categoryMap","forEach","category","Object","entries","map","name","value","parseFloat","toFixed","monthlyMap","month","toLocaleString","monthOrder","indexOf","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/uppal/OneDrive/Desktop/financial assistant/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { API_BASE_URL } from \"../config\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n\nconst Dashboard = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [categoryTotals, setCategoryTotals] = useState([]);\n  const [monthlyData, setMonthlyData] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          navigate(\"/login\");\n          return;\n        }\n        const response = await axios.get(`${API_BASE_URL}/finance/expenses`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        // Sort expenses by date (newest first)\n        const sortedExpenses = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setExpenses(sortedExpenses);\n\n        // Calculate total expenses\n        const total = sortedExpenses.reduce((sum, expense) => sum + expense.amount, 0);\n        setTotalExpenses(total);\n\n        // Compute category totals\n        const categoryMap = {};\n        sortedExpenses.forEach(expense => {\n          categoryMap[expense.category] = (categoryMap[expense.category] || 0) + expense.amount;\n        });\n        setCategoryTotals(\n          Object.entries(categoryMap).map(([name, value]) => ({ name, value: parseFloat(value.toFixed(2)) }))\n        );\n\n        // Compute monthly totals\n        const monthlyMap = {};\n        sortedExpenses.forEach(expense => {\n          const month = new Date(expense.date).toLocaleString(\"en-US\", { month: \"long\" });\n          monthlyMap[month] = (monthlyMap[month] || 0) + expense.amount;\n        });\n\n        const monthOrder = [\n          \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n          \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        \n        setMonthlyData(\n          Object.entries(monthlyMap)\n            .map(([month, amount]) => ({ month, amount: parseFloat(amount.toFixed(2)) }))\n            .sort((a, b) => monthOrder.indexOf(a.month) - monthOrder.indexOf(b.month))\n        );\n\n      } catch (error) {\n        console.error(\"Error fetching expenses:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchExpenses();\n  }, []);\n\n  return (\n    <div className=\"dashboard\">\n      <h2>Dashboard</h2>\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <p>Total Expenses: ₹{totalExpenses.toFixed(2)}</p>\n\n          {/* Bar Chart for Category Totals */}\n          <h3>Expenses by Category</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={categoryTotals}>\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"value\" fill=\"#82ca9d\" />\n            </BarChart>\n          </ResponsiveContainer>\n\n          {/* Bar Chart for Monthly Expenses */}\n          <h3>Monthly Expenses</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={monthlyData}>\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"amount\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}