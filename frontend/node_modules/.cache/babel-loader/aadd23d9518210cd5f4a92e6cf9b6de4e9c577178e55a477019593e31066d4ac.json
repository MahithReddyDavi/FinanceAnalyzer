{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uppal\\\\OneDrive\\\\Desktop\\\\financial assistant\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Sidebar from \"../components/Sidebar\";\nimport \"../styles/Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch the user name from localStorage\n  const userName = localStorage.getItem(\"userName\") || \"User\";\n\n  // Toggle Chat\n  const toggleChat = () => setChatOpen(!chatOpen);\n  const handleMessageSend = async () => {\n    if (newMessage.trim() === \"\") return;\n\n    // Add user message to the chat\n    setMessages(prevMessages => [...prevMessages, {\n      sender: \"user\",\n      text: newMessage\n    }]);\n\n    // Clear input field after sending\n    setNewMessage(\"\");\n\n    // Call the AI API for a response\n    try {\n      setLoading(true);\n      const response = await axios.post(\"https://api.openai.com/v1/completions\",\n      // OpenAI GPT API endpoint\n      {\n        model: \"text-davinci-003\",\n        // You can change the model type\n        prompt: newMessage,\n        max_tokens: 150,\n        temperature: 0.7\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `AIzaSyCXAaxTAgUO51oM52xo4lHYOPAwLU0Kdow` // Replace with your API key\n        }\n      });\n      const aiResponse = response.data.choices[0].text.trim();\n\n      // Add AI response to the chat\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"ai\",\n        text: aiResponse\n      }]);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to fetch AI response\");\n      setLoading(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleMessageSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greeting\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Hi, BOSS!! \\uD83D\\uDC4B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome back to your financial dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-icon\",\n        onClick: toggleChat,\n        children: \"\\uD83D\\uDDE8\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), chatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleChat,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"AI is typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 27\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMessageSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"pM6NKl08LCQDMwWcHyDEb2p2lpY=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Sidebar","jsxDEV","_jsxDEV","Dashboard","_s","navigate","chatOpen","setChatOpen","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","userName","localStorage","getItem","toggleChat","handleMessageSend","trim","prevMessages","sender","text","response","post","model","prompt","max_tokens","temperature","headers","Authorization","aiResponse","data","choices","err","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","type","placeholder","value","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/uppal/OneDrive/Desktop/financial assistant/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Sidebar from \"../components/Sidebar\";\nimport \"../styles/Dashboard.css\";\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch the user name from localStorage\n  const userName = localStorage.getItem(\"userName\") || \"User\";\n\n  // Toggle Chat\n  const toggleChat = () => setChatOpen(!chatOpen);\n\n  const handleMessageSend = async () => {\n    if (newMessage.trim() === \"\") return;\n\n    // Add user message to the chat\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { sender: \"user\", text: newMessage },\n    ]);\n\n    // Clear input field after sending\n    setNewMessage(\"\");\n\n    // Call the AI API for a response\n    try {\n      setLoading(true);\n      const response = await axios.post(\n        \"https://api.openai.com/v1/completions\", // OpenAI GPT API endpoint\n        {\n          model: \"text-davinci-003\", // You can change the model type\n          prompt: newMessage,\n          max_tokens: 150,\n          temperature: 0.7,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `AIzaSyCXAaxTAgUO51oM52xo4lHYOPAwLU0Kdow`, // Replace with your API key\n          },\n        }\n      );\n\n      const aiResponse = response.data.choices[0].text.trim();\n\n      // Add AI response to the chat\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"ai\", text: aiResponse },\n      ]);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to fetch AI response\");\n      setLoading(false);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleMessageSend();\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar />\n      <div className=\"dashboard-content\">\n        <div className=\"dashboard-header\">\n          <h2>Dashboard</h2>\n          {/* Greeting Section */}\n          <div className=\"greeting\">\n            <h3>Hi, BOSS!! 👋</h3>\n            <p>Welcome back to your financial dashboard</p>\n          </div>\n        </div>\n\n        {/* Chat Icon */}\n        <div className=\"chat-icon\" onClick={toggleChat}>\n          🗨️\n        </div>\n\n        {/* Chat Panel */}\n        {chatOpen && (\n          <div className=\"chat-panel\">\n            <div className=\"chat-header\">\n              <h4>Chat</h4>\n              <button onClick={toggleChat}>Close</button>\n            </div>\n            <div className=\"chat-body\">\n              {messages.map((message, index) => (\n                <div key={index} className={`chat-message ${message.sender}`}>\n                  <p>{message.text}</p>\n                </div>\n              ))}\n              {loading && <p>AI is typing...</p>}\n              {error && <p className=\"error\">{error}</p>}\n            </div>\n            <div className=\"chat-footer\">\n              <input\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                onKeyDown={handleKeyDown}\n              />\n              <button onClick={handleMessageSend}>Send</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}