{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uppal\\\\OneDrive\\\\Desktop\\\\financial assistant\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { PieChart, Pie, Cell, LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from \"recharts\";\nimport API_BASE_URL from \"../config\";\nimport Sidebar from \"../components/Sidebar\";\nimport \"../styles/Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#8884d8\", \"#82ca9d\"];\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [categoryTotals, setCategoryTotals] = useState([]);\n  const [monthlyExpenses, setMonthlyExpenses] = useState([]);\n  const [dailyExpenses, setDailyExpenses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [aiLoading, setAiLoading] = useState(false);\n  const configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const userName = localStorage.getItem(\"userName\") || \"User\";\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          navigate(\"/login\");\n          return;\n        }\n        const response = await axios.get(`${API_BASE_URL}/finance/expenses`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const sortedExpenses = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setExpenses(sortedExpenses);\n\n        // Calculate total expenses\n        setTotalExpenses(sortedExpenses.reduce((sum, expense) => sum + expense.amount, 0));\n\n        // Calculate category totals\n        const categoryData = sortedExpenses.reduce((acc, expense) => {\n          acc[expense.category] = (acc[expense.category] || 0) + expense.amount;\n          return acc;\n        }, {});\n        setCategoryTotals(Object.entries(categoryData).map(([name, value]) => ({\n          name,\n          value\n        })));\n\n        // Calculate monthly expenses\n        const monthlyData = sortedExpenses.reduce((acc, expense) => {\n          const month = new Date(expense.date).toLocaleString(\"default\", {\n            month: \"short\"\n          });\n          acc[month] = (acc[month] || 0) + expense.amount;\n          return acc;\n        }, {});\n        setMonthlyExpenses(Object.entries(monthlyData).map(([month, amount]) => ({\n          month,\n          amount\n        })));\n\n        // Calculate daily expenses (last 7 days)\n        const last7Days = [...Array(7)].map((_, i) => {\n          const d = new Date();\n          d.setDate(d.getDate() - i);\n          return d.toLocaleDateString(\"en-US\", {\n            weekday: 'short'\n          });\n        }).reverse();\n        const dailyData = last7Days.map(day => {\n          const dayExpenses = sortedExpenses.filter(exp => new Date(exp.date).toLocaleDateString(\"en-US\", {\n            weekday: 'short'\n          }) === day);\n          const total = dayExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n          return {\n            day,\n            amount: total\n          };\n        });\n        setDailyExpenses(dailyData);\n        setLoading(false);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to fetch expenses\");\n        setLoading(false);\n      }\n    };\n    fetchExpenses();\n  }, [navigate]);\n  const formatCurrency = amount => new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  }).format(amount);\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n    setTimeout(() => {\n      const chatBody = document.querySelector('.chat-body');\n      if (chatBody) chatBody.scrollTop = chatBody.scrollHeight;\n    }, 100);\n  };\n  const handleMessageSend = async () => {\n    if (!newMessage.trim()) return;\n\n    // Add user message\n    const userMsg = {\n      sender: 'user',\n      text: newMessage\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setNewMessage('');\n    setAiLoading(true);\n    try {\n      // Get AI response\n      const response = await openai.createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"system\",\n          content: `You are a helpful financial assistant analyzing this user's expenses. \n            Their categories: ${categoryTotals.map(c => c.name).join(', ')}. \n            Total expenses: ${formatCurrency(totalExpenses)}. \n            Keep responses brief (1-2 sentences), financial-focused, and friendly.`\n        }, {\n          role: \"user\",\n          content: newMessage\n        }],\n        temperature: 0.7,\n        max_tokens: 150\n      });\n      const aiText = response.data.choices[0].message.content;\n      const aiMsg = {\n        sender: 'ai',\n        text: aiText\n      };\n      setMessages(prev => [...prev, aiMsg]);\n    } catch (error) {\n      console.error(\"Error calling OpenAI:\", error);\n      const aiMsg = {\n        sender: 'ai',\n        text: \"Sorry, I'm having trouble responding. Please try again later.\"\n      };\n      setMessages(prev => [...prev, aiMsg]);\n    } finally {\n      setAiLoading(false);\n      setTimeout(() => {\n        const chatBody = document.querySelector('.chat-body');\n        if (chatBody) chatBody.scrollTop = chatBody.scrollHeight;\n      }, 100);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleMessageSend();\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading your financial data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-icon ${chatOpen ? 'active' : ''}`,\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), messages.length > 0 && !chatOpen && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-badge\",\n          children: messages.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), chatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Finance Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: toggleChat,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hello \", userName, \"! I can help analyze your spending.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-questions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setNewMessage(\"Where am I spending the most?\"),\n              children: \"Where am I spending the most?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setNewMessage(\"How can I reduce expenses?\"),\n              children: \"How can I reduce expenses?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [message.text, message.sender === 'ai' && index === messages.length - 1 && aiLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"typing-indicator\",\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ask about your finances...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyDown: handleKeyDown,\n          disabled: aiLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-btn\",\n          onClick: handleMessageSend,\n          disabled: !newMessage.trim() || aiLoading,\n          children: aiLoading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fqPx0rWKNhxxpATkgPPdcThfAFw=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","Configuration","OpenAIApi","PieChart","Pie","Cell","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","API_BASE_URL","Sidebar","jsxDEV","_jsxDEV","COLORS","Dashboard","_s","navigate","expenses","setExpenses","totalExpenses","setTotalExpenses","categoryTotals","setCategoryTotals","monthlyExpenses","setMonthlyExpenses","dailyExpenses","setDailyExpenses","loading","setLoading","error","setError","chatOpen","setChatOpen","messages","setMessages","newMessage","setNewMessage","aiLoading","setAiLoading","configuration","apiKey","process","env","REACT_APP_OPENAI_KEY","openai","userName","localStorage","getItem","fetchExpenses","token","response","get","headers","Authorization","sortedExpenses","data","sort","a","b","Date","date","reduce","sum","expense","amount","categoryData","acc","category","Object","entries","map","name","value","monthlyData","month","toLocaleString","last7Days","Array","_","i","d","setDate","getDate","toLocaleDateString","weekday","reverse","dailyData","day","dayExpenses","filter","exp","total","err","_err$response","_err$response$data","message","formatCurrency","Intl","NumberFormat","style","currency","format","toggleChat","setTimeout","chatBody","document","querySelector","scrollTop","scrollHeight","handleMessageSend","trim","userMsg","sender","text","prev","createChatCompletion","model","role","content","c","join","temperature","max_tokens","aiText","choices","aiMsg","console","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","index","type","placeholder","onChange","target","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["C:/Users/uppal/OneDrive/Desktop/financial assistant/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport {\n  PieChart, Pie, Cell, LineChart, Line, BarChart, Bar,\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n  AreaChart, Area\n} from \"recharts\";\nimport API_BASE_URL from \"../config\";\nimport Sidebar from \"../components/Sidebar\";\nimport \"../styles/Dashboard.css\";\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#8884d8\", \"#82ca9d\"];\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [categoryTotals, setCategoryTotals] = useState([]);\n  const [monthlyExpenses, setMonthlyExpenses] = useState([]);\n  const [dailyExpenses, setDailyExpenses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [aiLoading, setAiLoading] = useState(false);\n\n  const configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_KEY,\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const userName = localStorage.getItem(\"userName\") || \"User\";\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          navigate(\"/login\");\n          return;\n        }\n\n        const response = await axios.get(`${API_BASE_URL}/finance/expenses`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const sortedExpenses = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setExpenses(sortedExpenses);\n\n        // Calculate total expenses\n        setTotalExpenses(sortedExpenses.reduce((sum, expense) => sum + expense.amount, 0));\n\n        // Calculate category totals\n        const categoryData = sortedExpenses.reduce((acc, expense) => {\n          acc[expense.category] = (acc[expense.category] || 0) + expense.amount;\n          return acc;\n        }, {});\n        setCategoryTotals(Object.entries(categoryData).map(([name, value]) => ({ name, value })));\n\n        // Calculate monthly expenses\n        const monthlyData = sortedExpenses.reduce((acc, expense) => {\n          const month = new Date(expense.date).toLocaleString(\"default\", { month: \"short\" });\n          acc[month] = (acc[month] || 0) + expense.amount;\n          return acc;\n        }, {});\n        setMonthlyExpenses(Object.entries(monthlyData).map(([month, amount]) => ({ month, amount })));\n\n        // Calculate daily expenses (last 7 days)\n        const last7Days = [...Array(7)].map((_, i) => {\n          const d = new Date();\n          d.setDate(d.getDate() - i);\n          return d.toLocaleDateString(\"en-US\", { weekday: 'short' });\n        }).reverse();\n\n        const dailyData = last7Days.map(day => {\n          const dayExpenses = sortedExpenses.filter(exp => \n            new Date(exp.date).toLocaleDateString(\"en-US\", { weekday: 'short' }) === day\n          );\n          const total = dayExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n          return { day, amount: total };\n        });\n        setDailyExpenses(dailyData);\n\n        setLoading(false);\n      } catch (err) {\n        setError(err.response?.data?.message || \"Failed to fetch expenses\");\n        setLoading(false);\n      }\n    };\n\n    fetchExpenses();\n  }, [navigate]);\n\n  const formatCurrency = (amount) => new Intl.NumberFormat(\"en-US\", { style: \"currency\", currency: \"USD\" }).format(amount);\n\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n    setTimeout(() => {\n      const chatBody = document.querySelector('.chat-body');\n      if (chatBody) chatBody.scrollTop = chatBody.scrollHeight;\n    }, 100);\n  };\n\n  const handleMessageSend = async () => {\n    if (!newMessage.trim()) return;\n\n    // Add user message\n    const userMsg = { sender: 'user', text: newMessage };\n    setMessages(prev => [...prev, userMsg]);\n    setNewMessage('');\n    setAiLoading(true);\n\n    try {\n      // Get AI response\n      const response = await openai.createChatCompletion({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          {\n            role: \"system\",\n            content: `You are a helpful financial assistant analyzing this user's expenses. \n            Their categories: ${categoryTotals.map(c => c.name).join(', ')}. \n            Total expenses: ${formatCurrency(totalExpenses)}. \n            Keep responses brief (1-2 sentences), financial-focused, and friendly.`\n          },\n          {\n            role: \"user\",\n            content: newMessage\n          }\n        ],\n        temperature: 0.7,\n        max_tokens: 150\n      });\n\n      const aiText = response.data.choices[0].message.content;\n      const aiMsg = { sender: 'ai', text: aiText };\n      setMessages(prev => [...prev, aiMsg]);\n    } catch (error) {\n      console.error(\"Error calling OpenAI:\", error);\n      const aiMsg = { \n        sender: 'ai', \n        text: \"Sorry, I'm having trouble responding. Please try again later.\" \n      };\n      setMessages(prev => [...prev, aiMsg]);\n    } finally {\n      setAiLoading(false);\n      setTimeout(() => {\n        const chatBody = document.querySelector('.chat-body');\n        if (chatBody) chatBody.scrollTop = chatBody.scrollHeight;\n      }, 100);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleMessageSend();\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"dashboard-loading\">\n        <Sidebar />\n        <div className=\"loading-content\">\n          <div className=\"spinner\"></div>\n          <p>Loading your financial data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Sidebar />\n      <div className=\"dashboard-content\">\n        {/* ... (keep all your existing dashboard content exactly the same) ... */}\n      </div>\n\n      {/* Chat Interface */}\n      <div className={`chat-icon ${chatOpen ? 'active' : ''}`} onClick={toggleChat}>\n        <div className=\"chat-bubble\">\n          <span>💬</span>\n          {messages.length > 0 && !chatOpen && <span className=\"notification-badge\">{messages.length}</span>}\n        </div>\n      </div>\n\n      {chatOpen && (\n        <div className=\"chat-panel\">\n          <div className=\"chat-header\">\n            <h4>Finance Assistant</h4>\n            <button className=\"close-btn\" onClick={toggleChat}>\n              <span>×</span>\n            </button>\n          </div>\n          <div className=\"chat-body\">\n            {messages.length === 0 ? (\n              <div className=\"welcome-message\">\n                <p>Hello {userName}! I can help analyze your spending.</p>\n                <div className=\"quick-questions\">\n                  <button onClick={() => setNewMessage(\"Where am I spending the most?\")}>\n                    Where am I spending the most?\n                  </button>\n                  <button onClick={() => setNewMessage(\"How can I reduce expenses?\")}>\n                    How can I reduce expenses?\n                  </button>\n                </div>\n              </div>\n            ) : (\n              messages.map((message, index) => (\n                <div\n                  key={index}\n                  className={`chat-message ${message.sender}`}\n                >\n                  <div className=\"message-content\">\n                    {message.text}\n                    {message.sender === 'ai' && index === messages.length - 1 && aiLoading && (\n                      <span className=\"typing-indicator\">...</span>\n                    )}\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n          <div className=\"chat-footer\">\n            <input\n              type=\"text\"\n              placeholder=\"Ask about your finances...\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyDown={handleKeyDown}\n              disabled={aiLoading}\n            />\n            <button \n              className=\"send-btn\"\n              onClick={handleMessageSend}\n              disabled={!newMessage.trim() || aiLoading}\n            >\n              {aiLoading ? 'Sending...' : 'Send'}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}